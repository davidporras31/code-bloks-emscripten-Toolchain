<?xml version="1.0" encoding="UTF-8"?>
<CodeBlocks_compiler_options>
  <Program name="C" value="emcc.bat"/>
  <Program name="CPP" value="em++.bat"/>
  <Program name="LD" value=""/>
  <Program name="DBGconfig" value="gdb_debugger:Default"/>
  <Program name="LIB" value=""/>
  <Program name="WINDRES" value=""/>
  <Program name="MAKE" value=""/>
  <Switch name="includeDirs" value="-I"/>
  <Switch name="libDirs" value="-L"/>
  <Switch name="linkLibs" value="-l"/>
  <Switch name="defines" value="-D"/>
  <Switch name="genericSwitch" value="-"/>
  <Switch name="objectExtension" value="o"/>
  <Switch name="forceFwdSlashes" value="false"/>
  <Switch name="forceLinkerUseQuotes" value="false"/>
  <Switch name="forceCompilerUseQuotes" value="false"/>
  <Switch name="needDependencies" value="true"/>
  <Switch name="logging" value="default"/>
  <Switch name="libPrefix" value="lib"/>
  <Switch name="libExtension" value="a"/>
  <Switch name="linkerNeedsLibPrefix" value="false"/>
  <Switch name="linkerNeedsLibExtension" value="false"/>
  <Switch name="linkerNeedsPathResolved" value="false"/>
  <Switch name="supportsPCH" value="true"/>
  <Switch name="PCHExtension" value="gch"/>
  <Switch name="UseFlatObjects" value="false"/>
  <Switch name="UseFullSourcePaths" value="true"/>
  <Switch name="includeDirSeparator" value=" "/>
  <Switch name="libDirSeparator" value=" "/>
  <Switch name="objectSeparator" value=" "/>
  <Switch name="statusSuccess" value="0"/>
  <Switch name="Use83Paths" value="false"/>
  <Option name="we will grow the memory arrays at runtime, seamlessly and dynamically." option="-s ALLOW_MEMORY_GROWTH=1" category="runtime"/>
  <Option name="Ignore closure warnings and errors." option="-s IGNORE_CLOSURE_COMPILER_ERRORS=1" category="runtime"/>
  <Option name="Includes code to emulate various desktop GL features." option="-s LEGACY_GL_EMULATION=1" category="runtime"/>
  <Option name="use freetype from emscripten-ports" option="-s USE_FREETYPE=1" category="runtime"/>
  <Option name="use ogg from emscripten-ports" option="-s USE_OGG=1" category="runtime"/>
  <Option name="use vorbis from emscripten-ports" option="-s USE_VORBIS=1" category="runtime"/>
  <Option name="Emscriptenâ€™s OpenAL implementation" option="-lopenal" category="runtime"/>
  <Option name="No optimizations (default)." option="-O0" category="optimization"/>
  <Option name="Simple optimizations." option="-O1" category="optimization"/>
  <Option name="Like '-O1', but enables more optimizations." option="-O2" category="optimization"/>
  <Option name=" Like '-O2', but with additional optimizations that may take longer to run." option="-O3" category="optimization"/>
  <Option name="Like '-O3', but focuses more on code size." option="-Os" category="optimization"/>
  <Option name="Like '-Os', but reduces code size even further, and may take longer to run." option="-Oz" category="optimization"/>
  <Command name="CompileObject" value="$compiler $options $includes -c $file -o $object"/>
  <Command name="CompileObject" value="swig -c++ -lua $includes -o $file_dir/$file_name.cpp $file" ext="i" gen="$file_dir/$file_name.cpp"/>
  <Command name="CompileObject" value="ragel $file -C -L -o $file.cpp" ext="rl" gen="$file.cpp"/>
  <Command name="CompileObject" value="bison -v -d $file -o $file_dir/$file_name.parser.cc" ext="y" gen="$file_dir/$file_name.parser.cc;$file_dir/$file_name.parser.hh"/>
  <Command name="CompileObject" value="flex -o$file_dir/$file_name.scanner.cc $file" ext="l" gen="$file_dir/$file_name.scanner.cc"/>
  <Command name="CompileObject" value="cython $file" ext="pyx" gen="$file_dir/$file_name.c"/>
  <Command name="CompileObject" value="lzz $includes $file" ext="lzz" gen="$file_dir/$file_name.cpp;$file_dir/$file_name.h"/>
  <Command name="GenDependencies" value="$compiler -MM $options -MF $dep_object -MT $object $includes $file"/>
  <Command name="CompileResource" value="$rescomp $res_includes $res_options -J rc -O coff -i $file -o $resource_output"/>
  <Command name="LinkExe" value="$linker $libdirs -o $exe_output $link_objects $link_resobjects $link_options $libs -mwindows"/>
  <Command name="LinkConsoleExe" value="$linker $libdirs -o $exe_output $link_objects $link_resobjects $link_options $libs"/>
  <Command name="LinkDynamic" value="$linker -shared -Wl,--output-def=$def_output -Wl,--out-implib=$static_output -Wl,--dll $libdirs $link_objects $link_resobjects -o $exe_output $link_options $libs"/>
  <Command name="LinkStatic" value="cmd /c if exist $static_output del $static_output&#xA;$lib_linker -r -s $static_output $link_objects"/>
  <Command name="LinkNative" value="$linker $libdirs -o $exe_output $link_objects $link_resobjects $link_options $libs -Wl,--subsystem,native"/>
  <RegEx name="Fatal error" type="error" msg="1">
    <![CDATA[FATAL:[ \t]*(.*)]]>
  </RegEx>
  <RegEx name="'In function...' info" type="info" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t]+([iI]n ([cC]lass|[cC]onstructor|[dD]estructor|[fF]unction|[mM]ember [fF]unction).*)]]>
  </RegEx>
  <RegEx name="'Skipping N instantiation contexts' info (2)" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]+(\[[ \t]+[Ss]kipping [0-9]+ instantiation contexts[ \t]+\])]]>
  </RegEx>
  <RegEx name="'Skipping N instantiation contexts' info" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]+(\[[ \t]+[Ss]kipping [0-9]+ instantiation contexts[ \t]+\])]]>
  </RegEx>
  <RegEx name="'In instantiation' warning" type="warning" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t]+([Ii]n [Ii]nstantiation.*)]]>
  </RegEx>
  <RegEx name="'Required from' warning" type="warning" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]+([Rr]equired from.*)]]>
  </RegEx>
  <RegEx name="'Instantiated from' info (2)" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]+([Ii]nstantiated from .*)]]>
  </RegEx>
  <RegEx name="'Instantiated from' info" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]+([Ii]nstantiated from .*)]]>
  </RegEx>
  <RegEx name="Resource compiler error" type="error" msg="3" file="1" line="2">
    <![CDATA[windres.exe:[ \t]([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Resource compiler error (2)" type="error" msg="1">
    <![CDATA[windres.exe:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Preprocessor warning" type="warning" msg="4" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):([0-9]+):[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Compiler note (2)" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]([Nn]ote:[ \t].*)]]>
  </RegEx>
  <RegEx name="Compiler note" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]([Nn]ote:[ \t].*)]]>
  </RegEx>
  <RegEx name="General note" type="info" msg="1">
    <![CDATA[([Nn]ote:[ \t].*)]]>
  </RegEx>
  <RegEx name="Preprocessor error" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Compiler warning (2)" type="warning" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Compiler warning" type="warning" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Undefined reference (2)" type="error" msg="3" file="1" line="2">
    <![CDATA[[][{}() \t#%$~[:alnum:]&_:+/\.-]+\.o:([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t](undefined reference.*)]]>
  </RegEx>
  <RegEx name="Compiler error (2)" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Compiler error" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker warning" type="warning" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):\(\.text\+[0-9a-fA-FxX]+\):[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Linker error" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker error (2)" type="error" msg="2" file="1">
    <![CDATA[[][{}() \t#%$~[:alnum:]&_:+/\.-]+\(.text\+[0-9A-Za-z]+\):([ \tA-Za-z0-9_:+/\.-]+):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker error (3)" type="error" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):\(\.text\+[0-9a-fA-FxX]+\):(.*)]]>
  </RegEx>
  <RegEx name="Linker error (lib not found)" type="error" msg="2" file="1">
    <![CDATA[.*(ld.*):[ \t](cannot find.*)]]>
  </RegEx>
  <RegEx name="Linker error (cannot open output file)" type="error" msg="2;3" file="1">
    <![CDATA[.*(ld.*):[ \t](cannot open output file.*):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker error (unrecognized option)" type="error" msg="2" file="1">
    <![CDATA[.*(ld.*):[ \t](unrecognized option.*)]]>
  </RegEx>
  <RegEx name="Compiler error (unrecognized option)" type="error" msg="1">
    <![CDATA[.*cc.*:[ \t]([Uu]nrecognized.*option.*)]]>
  </RegEx>
  <RegEx name="No such file or directory" type="error" msg="2" file="1">
    <![CDATA[.*:(.*):[ \t](No such file or directory.*)]]>
  </RegEx>
  <RegEx name="Undefined reference" type="error" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t](undefined reference.*)]]>
  </RegEx>
  <RegEx name="General error" type="error" msg="1">
    <![CDATA[([Ee]rror:[ \t].*)]]>
  </RegEx>
  <RegEx name="General warning" type="warning" msg="1">
    <![CDATA[([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Auto-import info" type="info" msg="1">
    <![CDATA[([Ii]nfo:[ \t].*)\(auto-import\)]]>
  </RegEx>
  <RegEx name="Linker warning (different sized sections)" type="warning" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t]+(duplicate section.*has different size)]]>
  </RegEx>
  <Sort CFlags="-std=c89 -std=gnu89 -std=c90 -std=gnu90 -std=iso9899:1990 -std=iso9899:1994 -std=c99 -std=gnu99 -std=iso9899:1999 -std=c11 -std=gnu11 -std=iso9899:2011 -std=c17 -std=iso9899:2017"/>
  <Sort CPPFlags="-std=c++98 -std=gnu++98 -std=c++03 -std=gnu++03 -std=c++11 -std=gnu++11 -std=c++14 -std=gnu++14 -std=c++17 -std=gnu++17 -std=c++20 -std=gnu++20 -static-libstdc++ -shared-libstdc++ -fpermissive -fdeduce-init-list -fcheck-new -fstrict-enums -Weffc++ -Wctor-dtor-privacy -Wdelete-non-virtual-dtor -Wliteral-suffix -Wc++11-compat -Wnoexcept -Wnon-virtual-dtor -Wreorder -Wstrict-null-sentinel -Wno-non-template-friend -Wnon-template-friend -Wold-style-cast -Woverloaded-virtual -Wno-pmf-conversions -Wsign-promo -fno-rtti -fno-threadsafe-statics"/>
</CodeBlocks_compiler_options>
